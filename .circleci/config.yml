version: 2.1
orbs:
  slack: circleci/slack@4.1.3
jobs:
  build:
    working_directory: ~/mern-starter # ステップが実行されるディレクトリ
    docker: # Docker でステップを実行します
      - image: circleci/node:14.17.5 # このイメージをすべての `steps` が実行されるプライマリ コンテナとして使用します

    parameters:
      slack-title:
        type: string
        default: 'Parameter set title !'
      slack-message:
        type: string
        default: 'parameter set message!'

    steps:
      - checkout # ソース コードを作業ディレクトリにチェックアウトする特別なステップ
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # 依存関係キャッシュを復元する特別なステップ
          # 依存関係キャッシュについては https://circleci.com/ja/docs/2.0/caching/ をお読みください
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # 依存関係キャッシュを保存する特別なステップ
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: # テストを実行します
          name: test
          command: npm test
      - run:
          name: Slack notification
          #  >> $BASH_ENV に変数を代入するとどこでも値（UENO-TITLE）を取得できる！
          command: |
            # CircleCI URL
            echo "$CIRCLE_BUILD_URL : ${CIRCLE_BUILD_URL}"
            # Git branch URL but empty url
            echo "CIRCLE_COMPARE_URL : ${CIRCLE_COMPARE_URL}"
            # Git branch name
            echo "CIRCLE_BRANCH : ${CIRCLE_BRANCH}"
            # CircleCI Status
            echo "CCI_STATUS : ${CCI_STATUS}"
            # CircleCI Tag is github tag
            echo "CIRCLE_TAG : ${CIRCLE_TAG}"
            echo "SLACK_PARAM_TAGPATTERN : ${SLACK_PARAM_TAGPATTERN}"
            echo "CIRCLE_BUILD_NUM : ${CIRCLE_BUILD_NUM}"
            echo "GITHUB_TOKEN : ${GITHUB_TOKEN}"

            successMsg="SUCCESS !!"
            if [ -n "${CIRCLE_TAG}" ]; then
              successMsg="*Tag*: \n $CIRCLE_TAG"
            fi

            link=$CIRCLE_BUILD_URL
            text="CircleCi Build url"
            echo "export TITLE_LINK=$link" >> $BASH_ENV
            echo "export TITLE_TEXT=$text" >> $BASH_ENV
            echo "export SUCCESS_MSG=$successMsg" >> $BASH_ENV
            # memo success_tagged_deploy_1 template need `git tag` but GITHUB_TOKEN empty??

      - slack/notify:
          event: fail
          channel: "#code"
          mentions: '@UserName'
          template: basic_fail_1

      - slack/notify:
          event: pass
          channel: "#code"
          template: success_tagged_deploy_1

      # template `success_tagged_deploy_1` customize
      - slack/notify:
          event: pass
          channel: "#code"
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Deployment Successful! :tada:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: \n $CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*When*: \n $(date +'%m/%d/%Y %T')"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "$SUCCESS_MSG"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                    "alt_text": "CircleCI logo"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

      - slack/notify:
          event: pass
          channel: "#code"
          custom: |
            {
              "attachments": [
                {
                  "color": "#36a64f",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*<${TITLE_LINK}|${TITLE_TEXT}> TEST <<parameters.slack-title>>*"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "git branch::${CIRCLE_BRANCH}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "command set variables message:\n 改行 ${TITLE_TEXT}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "parameters set message: *<<parameters.slack-message>>*"
                        }
                      ]
                    }
                  ]
                }
              ]
            }

workflows:
  version: 2
  test-notice:
    jobs:
      - build:
          context: slack-notice
          slack-message: 'workflow set slack message!'
